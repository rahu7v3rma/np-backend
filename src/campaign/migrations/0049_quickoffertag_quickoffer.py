# Generated by Django 5.0.6 on 2024-10-15 08:41

import colorfield.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion

import campaign.models
import lib.phone_utils
import lib.storage


class Migration(migrations.Migration):
    dependencies = [
        ('campaign', '0048_orderproduct_variations'),
        ('inventory', '0040_alter_supplier_house_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuickOfferTag',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='QuickOffer',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255, null=True)),
                ('name_he', models.CharField(max_length=255, null=True)),
                ('code', models.CharField(max_length=255)),
                (
                    'quick_offer_type',
                    models.CharField(
                        choices=[('EVENT', 'Event')],
                        default=campaign.models.QuickOffer.TypeEnum['EVENT'],
                        max_length=30,
                    ),
                ),
                (
                    'ship_to',
                    models.CharField(
                        choices=[
                            ('TO_OFFICE', 'To Office'),
                            ('TO_EMPLOYEES', 'To Employees'),
                        ],
                        default=campaign.models.QuickOffer.ShippingEnum['TO_OFFICE'],
                        max_length=30,
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('PENDING', 'Pending'),
                            ('OFFER', 'Offer'),
                            ('ACTIVE', 'Active'),
                            ('FINISHED', 'Finished'),
                        ],
                        default='PENDING',
                        max_length=30,
                    ),
                ),
                ('login_page_title', models.CharField(max_length=255)),
                ('login_page_title_en', models.CharField(max_length=255, null=True)),
                ('login_page_title_he', models.CharField(max_length=255, null=True)),
                ('login_page_subtitle', models.TextField()),
                ('login_page_subtitle_en', models.TextField(null=True)),
                ('login_page_subtitle_he', models.TextField(null=True)),
                (
                    'main_page_first_banner_title',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'main_page_first_banner_title_en',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'main_page_first_banner_title_he',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'main_page_first_banner_subtitle',
                    models.TextField(blank=True, null=True),
                ),
                (
                    'main_page_first_banner_subtitle_en',
                    models.TextField(blank=True, null=True),
                ),
                (
                    'main_page_first_banner_subtitle_he',
                    models.TextField(blank=True, null=True),
                ),
                (
                    'main_page_first_banner_image',
                    lib.storage.RandomNameImageField(
                        default='default-banner.png',
                        upload_to=lib.storage.RandomNameImageField._generate_random_file_name,
                    ),
                ),
                (
                    'main_page_first_banner_mobile_image',
                    lib.storage.RandomNameImageField(
                        default='default-banner.png',
                        upload_to=lib.storage.RandomNameImageField._generate_random_file_name,
                    ),
                ),
                (
                    'main_page_second_banner_title',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'main_page_second_banner_title_en',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'main_page_second_banner_title_he',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'main_page_second_banner_subtitle',
                    models.TextField(blank=True, null=True),
                ),
                (
                    'main_page_second_banner_subtitle_en',
                    models.TextField(blank=True, null=True),
                ),
                (
                    'main_page_second_banner_subtitle_he',
                    models.TextField(blank=True, null=True),
                ),
                (
                    'main_page_second_banner_background_color',
                    colorfield.fields.ColorField(
                        default='#C1E0CE', image_field=None, max_length=25, samples=None
                    ),
                ),
                (
                    'main_page_second_banner_text_color',
                    models.CharField(
                        choices=[('BLACK', 'Black'), ('WHITE', 'White')], max_length=30
                    ),
                ),
                ('sms_sender_name', models.CharField(max_length=11)),
                ('sms_welcome_text', models.TextField()),
                ('sms_welcome_text_en', models.TextField(null=True)),
                ('sms_welcome_text_he', models.TextField(null=True)),
                ('email_welcome_text', models.TextField()),
                ('email_welcome_text_en', models.TextField(null=True)),
                ('email_welcome_text_he', models.TextField(null=True)),
                (
                    'login_page_image',
                    lib.storage.RandomNameImageField(
                        blank=True,
                        default='default-banner.png',
                        null=True,
                        upload_to=lib.storage.RandomNameImageField._generate_random_file_name,
                    ),
                ),
                (
                    'login_page_mobile_image',
                    lib.storage.RandomNameImageField(
                        blank=True,
                        default='default-banner.png',
                        null=True,
                        upload_to=lib.storage.RandomNameImageField._generate_random_file_name,
                    ),
                ),
                (
                    'auth_method',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('EMAIL', 'Email'),
                            ('PHONE_NUMBER', 'Phone Number'),
                            ('AUTH_ID', 'Auth ID'),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ('auth_id', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'phone_number',
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[lib.phone_utils.validate_phone_number],
                    ),
                ),
                (
                    'email',
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    'nicklas_status',
                    models.CharField(
                        choices=[
                            ('WAITING_TO_CLIENT', 'Waiting to client'),
                            ('CLIENT_WAIT_TO_ORDER', 'Client wait to order'),
                            ('NEGOTIATION_ON_PRICES', 'Negotiation on prices'),
                            ('WAITING_TO_NEW_PRODUCTS', 'Waiting to new products'),
                            ('OFFER_APPROVED', 'Offer approved'),
                            ('LOST', 'Lost'),
                        ],
                        default='WAITING_TO_CLIENT',
                        max_length=30,
                    ),
                ),
                (
                    'client_status',
                    models.CharField(
                        choices=[
                            ('READY_TO_CHECK', 'Ready to check'),
                            ('CLIENT_ADDED_TO_LIST', 'Client added to list'),
                            (
                                'LIST_CHANGED_AFTER_APPROVE',
                                'List changed after approve',
                            ),
                        ],
                        default='READY_TO_CHECK',
                        max_length=30,
                    ),
                ),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                (
                    'organization',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='campaign.organization',
                    ),
                ),
                ('products', models.ManyToManyField(to='inventory.product')),
                (
                    'tags',
                    models.ManyToManyField(blank=True, to='campaign.quickoffertag'),
                ),
            ],
        ),
    ]
